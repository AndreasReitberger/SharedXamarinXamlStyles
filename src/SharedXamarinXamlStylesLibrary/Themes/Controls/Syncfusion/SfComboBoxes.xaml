<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    
    xmlns:controls="clr-namespace:AndreasReitberger.Shared.XForm.Controls"
    xmlns:combobox="clr-namespace:Syncfusion.XForms.ComboBox;assembly=Syncfusion.SfComboBox.XForms"
    >
    <!-- OPTIMIZED -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Themes/Icons.xaml" />
        <ResourceDictionary Source="/Themes/Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Common style for combobox  -->
    <Style x:Key="DefaultComboBoxStyle" TargetType="combobox:SfComboBox">
        <Setter Property="BorderColor" Value="{OnPlatform Android={DynamicResource Gray-100}, Default={DynamicResource Gray-200}}" />
        <Setter Property="BackgroundColor" Value="{OnPlatform Android={DynamicResource Gray-100}, Default={DynamicResource Gray-200}}" />
        <Setter Property="DropDownButtonSettings">
            <Setter.Value>
                <combobox:DropDownButtonSettings
                    FontColor="{DynamicResource PrimaryColor}"
                    BackgroundColor="{DynamicResource Transparent}"
                    HighlightFontColor="{DynamicResource PrimaryColor}"
                    HighlightedBackgroundColor="{DynamicResource PrimaryColor}"
                    />
            </Setter.Value>
        </Setter>
        <Setter Property="ClearButtonColor" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="ShowClearButton" Value="True" />
        <Setter Property="TextColor" Value="{DynamicResource Gray-900}" />
        <Setter Property="FontFamily" Value="{StaticResource Montserrat-Regular}"/>
        <Setter Property="TextSize" Value="{OnIdiom Desktop=20, Tablet=20, Phone=14, Default=14}"/>
        <Setter Property="Margin" Value="4,2"/>
        <Setter Property="IsSelectedItemsVisibleInDropDown" Value="False"/>
        <Setter Property="DropDownBackgroundColor" Value="{DynamicResource Gray-200}"/>
        <Setter Property="DropDownBorderColor" Value="{DynamicResource Gray-400}"/>
        <Setter Property="DropDownTextColor" Value="{DynamicResource Gray-900}"/>
        <Setter Property="DropDownItemFontFamily" Value="{DynamicResource Montserrat-Regular}"/>
        <Setter Property="DropDownTextSize" Value="{OnIdiom Desktop=20, Tablet=20, Phone=14, Default=14}"/>
        <Setter Property="SelectedDropDownItemColor" Value="{DynamicResource Gray-100}"/>
        <Setter Property="HeightRequest" Value="{OnPlatform Default=42, Android=50, iOS=40}"/>


        <Setter Property="MultiSelectMode" Value="None"/>
        <Setter Property="TokenSettings">
            <Setter.Value>
                <combobox:TokenSettings 
                    FontSize="{OnIdiom Desktop=20, Tablet=20, Phone={OnPlatform Android=12, Default=14}, Default=14}" 
                    BackgroundColor="{DynamicResource Gray-100}" 
                    FontFamily="{StaticResource Montserrat-Regular}"
                    TextColor="{DynamicResource Gray-900}" 
                    SelectedBackgroundColor="{DynamicResource PrimaryColor}" 
                    IsCloseButtonVisible="true" 
                    CornerRadius="15" DeleteButtonPlacement="{OnPlatform Android=Left, Default=Right}"
                    />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False" TargetType="combobox:SfComboBox">
                <Setter Property="BackgroundColor" Value="{DynamicResource Gray-600}" />
            </Trigger>
            <Trigger Property="MultiSelectMode" Value="Token" TargetType="combobox:SfComboBox">
                <Setter Property="HeightRequest" Value="{OnPlatform Default=42, Android=60, iOS=45}"/>
            </Trigger>
            <!--
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
            </Trigger>
           
            <Trigger Property="Button.IsPressed" Value="True" TargetType="combobox:SfComboBox">
                <Setter Property="BackgroundColor" Value="{DynamicResource Gray-900}" />
                <Setter Property="TextColor" Value="{DynamicResource Gray-Black}" />
            </Trigger> -->
        </Style.Triggers>
    </Style>

    <Style TargetType="combobox:SfComboBox" BasedOn="{StaticResource DefaultComboBoxStyle}"/>

    <Style x:Key="DefaultMultiSelectComboBox" TargetType="controls:MultiSelectComboBox">
        <Setter Property="BorderColor" Value="{OnPlatform Android={DynamicResource Gray-100}, Default={DynamicResource Gray-200}}" />
        <Setter Property="BackgroundColor" Value="{OnPlatform Android={DynamicResource Gray-100}, Default={DynamicResource Gray-200}}" />
        <Setter Property="DropDownButtonSettings">
            <Setter.Value>
                <combobox:DropDownButtonSettings
                    FontColor="{DynamicResource PrimaryColor}"
                    BackgroundColor="{DynamicResource Transparent}"
                    HighlightFontColor="{DynamicResource PrimaryColor}"
                    HighlightedBackgroundColor="{DynamicResource PrimaryColor}"
                    />


            </Setter.Value>
        </Setter>
        <Setter Property="ClearButtonColor" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="ShowClearButton" Value="True" />
        <Setter Property="TextColor" Value="{DynamicResource Gray-900}" />
        <Setter Property="FontFamily" Value="{StaticResource Montserrat-Regular}"/>
        <Setter Property="TextSize" Value="{OnIdiom Desktop=20, Tablet=20, Phone=14, Default=14}"/>
        <Setter Property="Margin" Value="4,2"/>
        <Setter Property="IsSelectedItemsVisibleInDropDown" Value="False"/>
        <Setter Property="DropDownBackgroundColor" Value="{DynamicResource Gray-200}"/>
        <Setter Property="DropDownBorderColor" Value="{DynamicResource Gray-400}"/>
        <Setter Property="DropDownTextColor" Value="{DynamicResource Gray-900}"/>
        <Setter Property="DropDownItemFontFamily" Value="{DynamicResource Montserrat-Regular}"/>
        <Setter Property="DropDownTextSize" Value="{OnIdiom Desktop=20, Tablet=20, Phone=14, Default=14}"/>
        <Setter Property="SelectedDropDownItemColor" Value="{DynamicResource Gray-100}"/>
        <Setter Property="HeightRequest" Value="{OnPlatform Default=42, Android=50, iOS=40}"/>

        <Setter Property="MultiSelectMode" Value="None"/>
        <Setter Property="TokenSettings">
            <Setter.Value>
                <combobox:TokenSettings 
                    FontSize="{OnIdiom Desktop=20, Tablet=20, Phone={OnPlatform Android=12, Default=14}, Default=14}" 
                    BackgroundColor="{DynamicResource Gray-100}" 
                    FontFamily="{StaticResource Montserrat-Regular}"
                    TextColor="{DynamicResource Gray-900}" 
                    SelectedBackgroundColor="{DynamicResource PrimaryColor}" 
                    IsCloseButtonVisible="true" 
                    CornerRadius="15" DeleteButtonPlacement="{OnPlatform Android=Left, Default=Right}" 
                    />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False" TargetType="controls:MultiSelectComboBox">
                <Setter Property="BackgroundColor" Value="{DynamicResource Gray-600}" />
            </Trigger>
            <Trigger Property="MultiSelectMode" Value="Token" TargetType="controls:MultiSelectComboBox">
                <Setter Property="HeightRequest" Value="{OnPlatform Default=42, Android=60, iOS=45}"/>
            </Trigger>
            <!--
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource GrayBrush10}" />
            </Trigger>
           
            <Trigger Property="Button.IsPressed" Value="True" TargetType="combobox:SfComboBox">
                <Setter Property="BackgroundColor" Value="{DynamicResource Gray-900}" />
                <Setter Property="TextColor" Value="{DynamicResource Gray-Black}" />
            </Trigger> -->
        </Style.Triggers>
    </Style>

    <Style TargetType="controls:MultiSelectComboBox" BasedOn="{StaticResource DefaultMultiSelectComboBox}"/>

    <!-- Server selection template -->
    <Style x:Key="ServerSelectionComboBoxStyle" TargetType="combobox:SfComboBox" BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackLayout Orientation="Horizontal" Margin="4">
                        <!-- Icon -->
                        <Label 
                            Style="{StaticResource MaterialFontFamilyIconLabelStyle}" 
                            Text="{StaticResource MaterialDesign_ServerNetwork}"
                            TextColor="{DynamicResource PrimaryColor}"
                            VerticalTextAlignment="Center"
                            HorizontalTextAlignment="Center"
                            Margin="6,4,0,4"
                            />
                        <!-- Item -->
                        <Label 
                            Text="{Binding FullWebAddress}" 
                            VerticalTextAlignment="Center"
                            Style="{StaticResource SmallLabelStyle}"
                            />
                    </StackLayout>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Printer selection template -->
    <Style x:Key="PrinterSelectionComboBoxStyle" TargetType="combobox:SfComboBox" BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackLayout Orientation="Horizontal" Margin="2,4">
                        <!-- Icon -->
                        <Label 
                            Style="{StaticResource MaterialFontFamilyIconLabelStyle}" 
                            Text="{StaticResource MaterialDesign_Nozzle}"
                            TextColor="{DynamicResource PrimaryColor}"
                            FontSize="16"
                            VerticalTextAlignment="Center"
                            HorizontalTextAlignment="Center"
                            Margin="6,4,0,4"
                            />
                        <!-- Item -->
                        <Label 
                            Text="{Binding Name}" 
                            VerticalTextAlignment="Center"
                            Style="{StaticResource LabelStyle}"
                            />
                    </StackLayout>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>